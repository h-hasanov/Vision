<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="http://schemas.xceed.com/wpf/xaml/avalondock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary  Source="pack://application:,,,/HH.Icons.View;component/VectorGraphics/ImagesResources.xaml"/>
        <ResourceDictionary  Source="pack://application:,,,/HH.Styles.View;component/Brushes/DefaultBrushes.xaml"/>
        <ResourceDictionary Source="AvalonDockButtonStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <avalonDockControls:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <avalonDockControls:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>

    <DataTemplate x:Key="AvalonDockThemeMetroDocumentTitleTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Title}" Name="TitleElement"  TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
            <ContentControl Grid.Column="1" x:Name="DragHandleTexture" Content="{StaticResource DragHandleTexture}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder" 
                                Padding="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        TextBlock.Foreground="{DynamicResource TextBrush}"
                                        Padding="2,0,2,0" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter
                                            Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <avalonDockControls:DropDownButton
                                            Style="{StaticResource AvalonDockMetroThemeToggleButtonStyle}"
                                            Grid.Column="1"
                                            DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=RootDocumentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_CxMenu_Hint}"
                                            Content="{StaticResource DropDownVectorIcon}"/>

                                        <Button 
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                            Style="{StaticResource AvalonDockMetroFlatButtonStyle}"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Grid.Column="2"
                                            Content="{StaticResource MaximizeVectorIcon}">
                                        </Button>

                                        <Button 
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource AvalonDockMetroFlatButtonStyle}"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Grid.Column="2"
                                            Content="{StaticResource RestoreVectorIcon}"/>

                                        <Button 
                                            Style="{StaticResource AvalonDockMetroFlatButtonStyle}"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                            Grid.Column="3"
                                            Content="{StaticResource CloseVectorIcon}"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1" Grid.ColumnSpan="2"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Padding" Value="3" TargetName="WindowBorder"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" TargetName="Header"/>
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentSelectedColorBrush}" TargetName="Header"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>