<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:HH.Icons.View;assembly=HH.Icons.View"
                    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HH.Styles.View;component/Brushes/DefaultBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <xcad:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
    <xcad:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />

    <ControlTemplate x:Key="AvalonDockThemeMetroAnchorSideTemplate" TargetType="{x:Type xcad:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type xcad:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AvalonDockThemeMetroAnchorGroupTemplate" TargetType="{x:Type xcad:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>
    <ControlTemplate x:Key="AvalonDockThemeMetroAnchorTemplate" TargetType="{x:Type xcad:LayoutAnchorControl}">
        <Border x:Name="Bd"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="6,1,6,1">
            <ContentPresenter x:Name="CP"
                              Content="{Binding Model,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplate="{Binding AnchorableHeaderTemplate,
                                                        Mode=OneWay,
                                                        RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                       Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector,
                                                                Mode=OneWay,
                                                                RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                               Mode=FindAncestor}}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="Selector.IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="AvalonDockThemeMetroAnchorableHeaderTemplate">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <view:GlyphTextBlock Glyph="{Binding Content.IconSource}" />
            <TextBlock x:Name="title"
                       Grid.Column="1"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Content.IconSource}" Value="{x:Null}">
                <Setter TargetName="title" Property="Margin" Value="0" />
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="{x:Type xcad:LayoutAnchorableTabItem}">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableTabItem}">
                    <xcad:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <ContentPresenter Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding AnchorableHeaderTemplate,
                                                                            Mode=OneWay,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                                           Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector,
                                                                                    Mode=OneWay,
                                                                                    RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                                                   Mode=FindAncestor}}" />
                                <xcad:DropDownControlArea Grid.Column="0"
                                                          DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                          DropDownContextMenuDataContext="{Binding Path=Model,
                                                                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </xcad:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Selector.IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type xcad:LayoutAnchorableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableControl}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header">
                                <xcad:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ContentPresenter Grid.Row="1"
                                              Content="{Binding LayoutItem.View,
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              FlowDirection="{TemplateBinding FlowDirection}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>