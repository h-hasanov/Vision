<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="http://schemas.xceed.com/wpf/xaml/avalondock">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HH.Icons.View;component/VectorGraphics/ImagesResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HH.Styles.View;component/Styles/TabControlStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HH.Styles.View;component/Brushes/DefaultBrushes.xaml" />
        <ResourceDictionary Source="AvalonDockButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <avalonDockControls:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
    <avalonDockControls:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentPaneGroupControl}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
    </Style>

    <Style x:Key="AvalonDockThemeMetroDocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownButton x:Name="MenuDropDownButton"
                                                               Grid.Column="1"
                                                               Content="{StaticResource TabPopUpButtonVectorIcon}"
                                                               Style="{StaticResource AvalonDockMetroThemeToggleButtonStyle}">
                                <avalonDockControls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}" Padding="0">
                                        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type avalonDockControls:MenuItemEx}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </avalonDockControls:DropDownButton.DropDownContextMenu>
                            </avalonDockControls:DropDownButton>
                            <avalonDockControls:DocumentPaneTabPanel x:Name="HeaderPanel"
                                                                     Grid.Row="0"
                                                                     Grid.Column="0"
                                                                     Margin="0,0,2,2"
                                                                     IsItemsHost="true"
                                                                     KeyboardNavigation.TabIndex="1" />
                        </Grid>
                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle">

                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="0,2,0,0"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ControlsDisabledBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource VsTabItemStyle}" TargetType="TabItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding Title}" />
                    <Setter Property="Margin" Value="0,0,0,-3.5" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border x:Name="ContentTemplateControl"
                            BorderBrush="{DynamicResource AccentColorBrush}"
                            BorderThickness="0,2,0,0">
                        <avalonDockControls:LayoutDocumentControl Margin="0,2,0,0"
                                                                  Background="{DynamicResource WindowBackgroundBrush}"
                                                                  BorderBrush="{DynamicResource ControlBorderBrush}"
                                                                  BorderThickness="1,0,1,1"
                                                                  Model="{Binding}" />
                    </Border>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter TargetName="ContentTemplateControl" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                        <Trigger Property="Selector.IsSelectionActive" Value="True">
                            <Setter TargetName="ContentTemplateControl" Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>