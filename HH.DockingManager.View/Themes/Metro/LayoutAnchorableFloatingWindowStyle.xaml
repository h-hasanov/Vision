<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockControls="http://schemas.xceed.com/wpf/xaml/avalondock"
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HH.Icons.View;component/VectorGraphics/ImagesResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HH.Styles.View;component/Brushes/DefaultBrushes.xaml" />
        <ResourceDictionary Source="AvalonDockButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <avalonDockControls:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <avalonDockControls:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />

    <DataTemplate x:Key="AvalonDockThemeMetroAnchorableTitleTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Name="TitleElement"
                       VerticalAlignment="Center"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
            <ContentControl x:Name="DragHandleTexture"
                            Grid.Column="1"
                            Content="{StaticResource DragHandleTexture}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        Padding="2,0,2,0"
                                        TextBlock.Foreground="{DynamicResource TextBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <avalonDockControls:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}" DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate,
                                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector,
                                                                                                    RelativeSource={RelativeSource TemplatedParent}}" />
                                            </avalonDockControls:DropDownControlArea>
                                        </Border>

                                        <avalonDockControls:DropDownButton Grid.Column="1"
                                                                           Content="{StaticResource DropDownVectorIcon}"
                                                                           DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                                                           DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem,
                                                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                                           Style="{StaticResource AvalonDockMetroThemeToggleButtonStyle}"
                                                                           ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                                                           Visibility="{Binding Path=Model.IsSinglePane,
                                                                                                RelativeSource={RelativeSource TemplatedParent},
                                                                                                Converter={StaticResource BoolToVisibilityConverter}}" />

                                        <Button Grid.Column="2"
                                                Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Content="{StaticResource MaximizeVectorIcon}"
                                                Style="{StaticResource AvalonDockMetroFlatButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                                Visibility="{Binding IsMaximized,
                                                                     RelativeSource={RelativeSource TemplatedParent},
                                                                     Converter={StaticResource InverseBoolToVisibilityConverter}}" />

                                        <Button Grid.Column="2"
                                                Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                Content="{StaticResource RestoreVectorIcon}"
                                                Style="{StaticResource AvalonDockMetroFlatButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                                Visibility="{Binding IsMaximized,
                                                                     RelativeSource={RelativeSource TemplatedParent},
                                                                     Converter={StaticResource BoolToVisibilityConverter}}" />

                                        <Button Grid.Column="3"
                                                Command="{Binding HideWindowCommand,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                Content="{StaticResource CloseVectorIcon}"
                                                Style="{StaticResource AvalonDockMetroFlatButtonStyle}"
                                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                                Visibility="{Binding Path=IsEnabled,
                                                                     RelativeSource={RelativeSource Self},
                                                                     Mode=OneWay,
                                                                     Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="Header" Property="TextBlock.Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>